#!/bin/bash
set -e
# export TERRAGRUNT_SOURCE_UPDATE=true to track a branch rather than a tag
export TF_INPUT=false
TK_HOME="$(dirname $(readlink -f $0))"
trap "mv $TK_HOME/environments/root.yaml.bak $TK_HOME/environments/root.yaml" EXIT

export GOOGLE_OAUTH_ACCESS_TOKEN=$(create-token -d $TK_HOME/test/integration)
mv $TK_HOME/environments/root.yaml $TK_HOME/environments/root.yaml.bak
cp $TK_HOME/test/integration/root.yaml $TK_HOME/environments/root.yaml

case $1 in
"apply")
  terragrunt run-all apply --terragrunt-include-external-dependencies
  ;;
"output")
  # grab all the outputs and massage them into the format test kitchen expects.
  # terragrunt output-all, incredibly, still interleaves its output by default
  terragrunt run-all output -json \
    --terragrunt-parallelism 1 --terragrunt-include-external-dependencies |
    jq -rs '.' |
    python -c "
import sys, json
myobj = {}
outputs_list = json.load(sys.stdin)
for output in outputs_list:
  if 'project' in output:
    newobj = {}
    newobj_key = 'project_' + output['project']['value']['project_name']
    newobj[newobj_key] = output['project']
    myobj.update(newobj)
  else:
    myobj.update(output)
print(json.dumps(myobj))
    "
  ;;
"destroy")
  terragrunt run-all destroy --terragrunt-include-external-dependencies
  ;;
"workspace")
  # no need for test kitchen to track workspaces
  exit 0
  ;;
*)
  terraform "$@"
  ;;
esac
